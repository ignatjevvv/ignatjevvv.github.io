{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8DAA8D,iBAAiB;AAC/E;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;AC7JA,aAAa,mBAAO,CAAC,oCAAQ;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;AC9BA,aAAa,mBAAO,CAAC,oCAAQ;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;UC3BA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA;AACA,iBAAiB,mBAAO,CAAC,4CAAgB;AACzC,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,kBAAkB,mBAAO,CAAC,8CAAiB;;AAE3C;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,CAAC,E","sources":["webpack://food/./js/modules/calc.js","webpack://food/./js/modules/elect.js","webpack://food/./js/modules/water.js","webpack://food/webpack/bootstrap","webpack://food/./js/script.js"],"sourcesContent":["function calc() {\n    class Calculator {\n        constructor(inputPreValue, inputTotalValue, labelPrevValue, labelCurrValue, labelDiffValue, labelCurrSum, labRate, btn) {\n            this.inputPreValue = document.querySelector(inputPreValue);\n            this.inputTotalValue = document.querySelector(inputTotalValue);\n            this.labelPrevValue = document.querySelector(labelPrevValue);\n            this.labelCurrValue = document.querySelector(labelCurrValue);\n            this.labelDiffValue = document.querySelector(labelDiffValue);\n            this.labelCurrSum = document.querySelector(labelCurrSum);\n            this.labRate = document.querySelector(labRate);\n            this.btn = document.querySelector(btn);\n        }\n\n        inputListener(className) {\n            this.inputPreValue.addEventListener('input', () => {\n                this.checkInputValue(this.inputPreValue);\n            });\n\n            this.inputTotalValue.addEventListener('input', () => {\n                this.checkInputValue(this.inputTotalValue);\n            });\n        }\n\n        checkInputValue(selectorInput) {\n            let inputClass = selectorInput.parentElement.parentElement;\n\n            if (!Number.isInteger(+selectorInput.value)) {\n                inputClass.classList.add('error');\n                this.clearLabelItem();\n                return;\n            }\n\n            if (Math.sign(+selectorInput.value) == -1) {\n                inputClass.classList.add('error');\n                this.clearLabelItem();\n                return;\n            }\n\n            if (+this.inputPreValue.value >= +this.inputTotalValue.value) {\n                inputClass.classList.add('error');\n                this.clearLabelItem();\n            }\n\n            if (this.inputTotalValue.value === '') {\n                inputClass.classList.remove('error');\n                this.clearLabelItem();\n                return;\n            }\n\n            if (+this.inputTotalValue.value > +this.inputPreValue.value) {\n                this.calculate();\n                this.clearInputError();\n                this.resizeLabelSum(selectorInput);\n            } else {\n                this.clearLabelItem();\n            }\n\n        }\n\n        calculate() {\n            this.diff = +this.inputTotalValue.value - +this.inputPreValue.value;\n\n            if (this.inputPreValue.value.length != 0) {\n                this.labelDiffValue.textContent = this.diff;\n            }\n\n            this.labelPrevValue.textContent = +this.inputPreValue.value;\n            this.labelCurrValue.textContent = +this.inputTotalValue.value;\n        }\n\n        clearInputError() {\n            const inputs = document.querySelectorAll('.calculator_input');\n\n            inputs.forEach(input => {\n                input.classList.remove('error');\n            });\n        }\n\n        clearLabelItem() {\n            // Clear label info\n            let labelList = [\n                this.labelPrevValue,\n                this.labelCurrValue,\n                this.labelDiffValue,\n                this.labelCurrSum,\n                this.labRate];\n\n            labelList.forEach(item => {\n                item.textContent = '0';\n            });\n\n            // Set default font-size label current sum \n            if (this.labelCurrSum.textContent.length === 1) {\n                this.labelCurrSum.style.fontSize = '50px';\n            }\n        }\n\n        resizeLabelSum(inputValue) {\n            let px = this.labelCurrSum.style.fontSize.match(/\\d/g).join('');\n\n            switch (this.labelCurrSum.textContent.length) {\n                case 7:\n                    this.labelCurrSum.style.fontSize = '44px';\n                    break;\n                case 8:\n                    this.labelCurrSum.style.fontSize = '38px';\n                    break;\n                case 9:\n                    this.labelCurrSum.style.fontSize = '34px';\n                    break;\n                case 10:\n                    this.labelCurrSum.style.fontSize = '32px';\n                    break;\n                default:\n                    this.labelCurrSum.style.fontSize = '50px';\n            }\n\n            inputValue.addEventListener('keydown', (e) => {\n                if (e.code === 'Backspace') {\n                    if (inputValue.value != '' && px != 50 || inputValue.selectionStart != 0) {\n                        this.labelCurrSum.style.fontSize = `${(+px + 6) + 'px'}`;\n                    }\n                }\n            });\n        }\n\n        // Save value\n        btns(element, key) {\n            this.btn.addEventListener('click', (e) => {\n                if (+this.inputTotalValue.value > +this.inputPreValue.value || +this.inputPreValue.value === 0) {\n                    this.saveValueCurrent(e.target.parentNode.className, element, key);\n                }\n            });\n        }\n\n        saveValueCurrent(e, element, key) {\n            if (e === element) {\n                localStorage.setItem(key, this.inputTotalValue.value);\n            }\n\n            this.loadLocalStorage(key, this.inputPreValue);\n            this.inputTotalValue.value = '';\n            this.clearLabelItem();\n        }\n\n        // Local Storage load data\n\n        loadLocalStorage(key) {\n            if (localStorage.getItem(key)) {\n                this.inputPreValue.value = localStorage.getItem(key);\n            }\n        }\n    }\n\n    return Calculator;\n}\n\nmodule.exports = calc;","const calc = require(\"./calc\");\n\nfunction elect() {\n    class CalculateElectricity extends calc() {\n        calculate() {\n            super.calculate();\n            if (this.diff) {\n                this.labelCurrSum.textContent = (this.diff * 2.64).toFixed(2);\n                this.labRate.textContent = '2.64';\n            }\n        }\n    }\n\n    let calcElectricity = new CalculateElectricity(\n        '#elect_previous',\n        '#elect_current',\n        '[data-calc-display=\"previous\"]',\n        '[data-calc-display=\"current\"]',\n        '[data-calc-display=\"difference\"]',\n        '[data-calc-display=\"sum\"]',\n        '[data-calc-display=\"rate\"]',\n        '#btn'\n    );\n\n    calcElectricity.btns('calculator', 'electric');\n    calcElectricity.inputListener();\n    calcElectricity.loadLocalStorage('electric');\n    return CalculateElectricity;\n}\n\nmodule.exports = elect;","const calc = require(\"./calc\");\n\nfunction water() {\n    class CalculateWater extends calc() {\n        calculate() {\n            super.calculate();\n            this.labelCurrSum.textContent = (this.diff * 31.56).toFixed(2);\n            this.labRate.textContent = '31.56';\n        }\n    }\n    \n    let calcWater = new CalculateWater(\n        '#water_previous',\n        '#water_current',\n        '[data-calc-display=\"water_previous\"]',\n        '[data-calc-display=\"water_current\"]',\n        '[data-calc-display=\"water_difference\"]',\n        '[data-calc-display=\"water_sum\"]',\n        '[data-calc-display=\"water_rate\"]',\n        '#btn_water'\n    );\n    \n    calcWater.btns('calculator', 'water');\n    calcWater.inputListener();\n    calcWater.loadLocalStorage('water');\n}\n\nmodule.exports = water;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","window.addEventListener('DOMContentLoaded', () => {\n    const calc = require('./modules/calc'),\n          elect = require('./modules/elect'),\n          water = require('./modules/water');\n\n          calc();\n          elect();\n          water();\n\n          // VanillaTilt\n\n        const calcCard = document.querySelectorAll('.calculator__result');\n        \n        calcCard.forEach(card => (\n            card.addEventListener('mouseover', (e) => {\n                card.classList.add('transform');\n                // if (card.parentNode.classList[0] === 'calculator') {\n                //     card.classList.add('transform');\n                // } \n            })\n        ));\n\n        calcCard.forEach(card => {\n            card.addEventListener('mouseout', () => {\n                card.classList.remove('transform');\n                // if (card.parentNode.classList[0] === 'calculator'){\n                //     card.classList.remove('transform');\n                // }\n            });\n        });\n        \n});"],"names":[],"sourceRoot":""}