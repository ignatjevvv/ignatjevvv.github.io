/*=============== BASE ===============*/
*{
    box-sizing: border-box; // border-box говорит браузеру учитывать любые границы и внутренние отступы в значениях, которые вы указываете в ширине и высоте элемента. Если вы выставите элементу ширину 100 пикселей, то эти 100 пикселей будут включать в себя границы и внутренние отступы, а контент сожмётся, чтобы выделить для них место. Обычно это упрощает работу с размерами элементов.
    padding: 0; // Свойство padding устанавливает внутренние отступы/поля со всех сторон элемента
    margin: 0; // Cвойство margin определяет внешний отступ на всех четырёх сторонах элемента.
}

html {
    scroll-behavior: smooth; // Управляет поведением прокрутки внутри блока. Значение smooth делает её плавной.
}

body {
    font-family: var(--body-font); // Задает общий стиль шрифта всему документу
    font-size: var(--normal-font-size); // Задает общий стиль размера шрифта
    background-color: var(--body-color); // Цвет фона 
    color: var(--text-color);   
}

h1,h2,h3 {
    color: var(--title-color);
    font-weight: var(--font-bold); // Задаёт насыщенность шрифта
}

h1,h2,h3,p{
    line-height: 140%;
}

ul {
    list-style: none; // Cкрыть отображение маркеров в списке
}

a {
    text-decoration: none; // убирает со ссылок подчёркивание и другие эффекты
}

img {
    max-width: 100%; // Изображение останется в границах родительского элемента, даже при том, что его изначальный размер больше.
    height: auto; // Высота элемента, при применении значения auto, соответствует высоте содержимого элемента
}

button {
    border: none; // Убирает стиль границы элимента.
    outline: none; // Убирает рамку вокруг элемента, за пределами его CSS-блока
    cursor: pointer; // Устанавливает форму курсора, когда он находится в пределах элемента.
}